# Docker Compose configuration for Rambini Backend

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rambini_postgres
    environment:
      POSTGRES_DB: rambini_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - rambini_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rambini_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rambini_network

  # Rambini Backend API
  api:
    build: .
    container_name: rambini_api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=rambini_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - rambini_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: npm run start:dev

volumes:
  postgres_data:
  redis_data:

networks:
  rambini_network:
    driver: bridge 